# Generated by Django 3.2.18 on 2023-08-08 16:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Norm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isNorm', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, help_text='name of the norm', max_length=150)),
                ('link', models.CharField(blank=True, help_text='link', max_length=150)),
                ('title', models.CharField(blank=True, help_text='title of the norm', max_length=250)),
                ('shortDescription', models.TextField(help_text='short description', max_length=600)),
                ('source', models.CharField(blank=True, help_text='source', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isNorm', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, help_text='name of the norm', max_length=150)),
                ('link', models.CharField(blank=True, help_text='link', max_length=150)),
                ('communicationMediumCategory', models.CharField(blank=True, help_text='Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)', max_length=150)),
                ('supportedTransmissionMediuems', models.CharField(blank=True, help_text='Unterstützte Übertragungsmedien', max_length=150)),
                ('associatedStandards', models.CharField(blank=True, help_text='Zugehörige Standards (Spezifische Standards, denen jedes Protokoll entspricht)', max_length=200)),
                ('openSourceStatus', models.CharField(blank=True, help_text='Open-Source-Status (Ob Spezifikationen öffentlich und frei verfügbar sind oder nicht)', max_length=50)),
                ('licensingFeeRequirement', models.CharField(blank=True, help_text='Lizenzgebühr (Gebühr zur Abdeckung der Kosten für Tests und Zertifizierung)', max_length=150)),
                ('networkTopology', models.CharField(blank=True, help_text='Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)', max_length=150)),
                ('security', models.CharField(blank=True, help_text='Implementierte Sicherheitmechanismen', max_length=150)),
                ('bandwidth', models.CharField(blank=True, help_text='Bandbreite', max_length=150)),
                ('frequency', models.CharField(blank=True, help_text='Frequenz', max_length=100)),
                ('range', models.CharField(blank=True, help_text='Reichweite', max_length=150)),
                ('numberOfConnectedDevices', models.CharField(blank=True, help_text='Geräte (maximale Anzahl an Geräten, die vernetzt werden können)', max_length=5)),
                ('dataModelArchitecture', models.CharField(blank=True, help_text='Datenmodell Architektur (Datenmodell, in dem die Informationen/Attribute zu einem Objekt hinzugefügt werden)', max_length=150)),
                ('discovery', models.CharField(blank=True, help_text='Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)', max_length=10)),
                ('multiMaster', models.CharField(blank=True, help_text='Multi Master (Können mehrere Mastergeräte zeitgleich agieren)', max_length=10)),
                ('packetSize', models.CharField(blank=True, help_text='Paketgröße (Datenpaketgröße, die nach Maximum Transmission Unit übertragen werden können)', max_length=10)),
                ('priorities', models.CharField(blank=True, help_text='Prorität (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)', max_length=100)),
                ('price', models.CharField(blank=True, help_text='Kosten, um Hardwareuntersützung für weitere Protokolle zu ermöglichen (Gering, Durchschnittlich, Hoch)', max_length=150)),
                ('osiLayers', models.CharField(blank=True, help_text='Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])', max_length=150)),
                ('buildingAutomationLayer', models.CharField(blank=True, help_text='Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)', max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
