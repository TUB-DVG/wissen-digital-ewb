"""
Django settings for webcentral_app project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# tries to read the DEBUG env-var and converts it to int. 
# If it cant convert to int, DEBUG is set to 0, which is converted to false.
DEBUG = bool(int(os.environ.get("DEBUG", 0)))

ALLOWED_HOSTS = []
ALLOWED_HOSTS.extend(
    filter(
        None,
        os.environ.get("ALLOWED_HOSTS", '').split(','),
    )
)

# Application definition

INSTALLED_APPS = [
    "criteriaCatalog.apps.CriteriacatalogConfig",
    'publications.apps.PublicationsConfig',
    'pages.apps.PagesConfig',
    'TechnicalStandards.apps.TechnicalStandardsConfig',
    'project_listing.apps.ProjectListingConfig',
    'tools_over.apps.ToolsOverConfig',
    'weatherdata_over.apps.WeatherdataOverConfig',
    'keywords.apps.KeywordsConfig',
    'LastProfile.apps.LastprofileConfig',
    'Datasets.apps.DatasetsConfig',
    'django.contrib.humanize',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    'channels',
]

MIDDLEWARE = [
    'csp.middleware.CSPMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Content Security Policy
CSP_IMG_SRC = ("'self'")
CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'", 
    "https://fonts.googleapis.com", 
    "nonce-baseStyleOne",
    "nonce-baseStartpageOne",
    "nonce-baseDivStyleOne",
    "nonce-baseStartpageAOne",
    "nonce-weatherdataDetailDivOne",
    "https://cdn.jsdelivr.net",
)
CSP_SCRIPT_SRC = (
    "'self'", 
    "'unsafe-inline'",
    "https://ajax.googleapis.com", 
    "https://cdnjs.cloudflare.com",
    "https://maxcdn.bootstrapcdn.com",
    "https://cdn.plot.ly",
    "https://unpkg.com",
)
CSP_DEFAULT_SRC = (
    "'self'", 
    "https://fonts.gstatic.com",
    "https://cdn.jsdelivr.net",    
)
CSP_FRAME_ANCESTORS = ("'self'",)
CSP_FORM_ACTION = ("'self'",)
CSP_BASE_URI = ("'self'",)
ROOT_URLCONF = 'webcentral_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [Path.joinpath(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webcentral_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get("POSTGRES_DB"),
        'USER': os.environ.get("POSTGRES_USER"),
        'PASSWORD': os.environ.get("POSTGRES_PASSWORD"),
        'HOST': 'database',
        'TEST': {
            'MIRROR': "default",
        },
    },   
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

X_FRAME_OPTIONS = 'SAMEORIGIN'

CRISPY_TEMPLATE_PACK='bootstrap4'

ASGI_APPLICATION='webcentral_app.routing.application'
"""
CHANNEL_LAYERS={
    'default':{
        'BACKEND':'channels_redis.core.RdisChannelLayer',
        'CONFIG':{
            'hosts': [('127.0.0.1',6379),], # This might need to be implemented when working on the server
        }
    }
}
"""


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

#STATIC_ROOT= Path.joinpath(BASE_DIR, 'static')
if os.environ.get("MODE") == "production":
    STATIC_ROOT = "/home/uwsgiguest/webcentral/static" 
    STATIC_URL = '/static/static/'
    STATICFILES_DIRS = [
        Path.joinpath(BASE_DIR, 'webcentral_app/static')
    ]
    # Media folder settings
    # MEDIA_ROOT=Path.joinpath(BASE_DIR,'media')
    MEDIA_ROOT = "/home/uwsgiguest/webcentral/media"
    MEDIA_URL = '/media/'
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SESSION_COOKIE_SAMESITE = 'Strict'
    SECURE_HSTS_SECONDS = 10
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    CSRF_USE_SESSIONS = True
    SECURE_BROWSER_XSS_FILTER = True
else:
    STATIC_ROOT= Path.joinpath(BASE_DIR, 'static')
    STATIC_URL = '/static/'
    STATICFILES_DIRS = [
        Path.joinpath(BASE_DIR, 'webcentral_app/static')
    ]
    # Media folder settings
    MEDIA_ROOT=Path.joinpath(BASE_DIR,'media')
    MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

useDotENV = bool(int(os.environ.get("USE_DOT_ENV", 0)))
if not useDotENV: 
    try:
        from webcentral_app.local_settings import *
    except ImportError:
        pass
