# Generated by Django 5.0.9 on 2024-12-10 12:54

import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("TechnicalStandards", "0001_initial"),
        ("common", "0001_initial"),
        ("project_listing", "0001_initial"),
        ("protocols", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Accessibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accessibility",
                    models.CharField(
                        blank=True, help_text="userInterface", max_length=300
                    ),
                ),
                (
                    "accessibility_de",
                    models.CharField(
                        blank=True,
                        help_text="userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "accessibility_en",
                    models.CharField(
                        blank=True,
                        help_text="userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApplicationArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "applicationArea",
                    models.CharField(
                        blank=True,
                        help_text="application area",
                        max_length=1000,
                    ),
                ),
                (
                    "applicationArea_de",
                    models.CharField(
                        blank=True,
                        help_text="application area",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "applicationArea_en",
                    models.CharField(
                        blank=True,
                        help_text="application area",
                        max_length=1000,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classification",
                    models.CharField(
                        help_text="Classification Category", max_length=100
                    ),
                ),
                (
                    "classification_de",
                    models.CharField(
                        help_text="Classification Category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "classification_en",
                    models.CharField(
                        help_text="Classification Category",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Focus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "focus",
                    models.CharField(
                        help_text="Focus of the Tool", max_length=100
                    ),
                ),
                (
                    "focus_de",
                    models.CharField(
                        help_text="Focus of the Tool", max_length=100, null=True
                    ),
                ),
                (
                    "focus_en",
                    models.CharField(
                        help_text="Focus of the Tool", max_length=100, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifer", models.CharField(max_length=300)),
                ("stringifiedObj", models.TextField()),
                ("loaded", models.BooleanField(default=False)),
                (
                    "updateDate",
                    models.DateTimeField(
                        db_default=django.db.models.functions.datetime.Now()
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LifeCyclePhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lifeCyclePhase",
                    models.CharField(
                        blank=True,
                        help_text="Life cycle phase of buildings where the application is used",
                        max_length=100,
                    ),
                ),
                (
                    "lifeCyclePhase_de",
                    models.CharField(
                        blank=True,
                        help_text="Life cycle phase of buildings where the application is used",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "lifeCyclePhase_en",
                    models.CharField(
                        blank=True,
                        help_text="Life cycle phase of buildings where the application is used",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scale",
                    models.CharField(
                        blank=True,
                        help_text="spatial scope of consideration",
                        max_length=100,
                    ),
                ),
                (
                    "scale_de",
                    models.CharField(
                        blank=True,
                        help_text="spatial scope of consideration",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "scale_en",
                    models.CharField(
                        blank=True,
                        help_text="spatial scope of consideration",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TargetGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "targetGroup",
                    models.CharField(
                        blank=True,
                        help_text="Which group of people is the tool targeted at?",
                        max_length=300,
                    ),
                ),
                (
                    "targetGroup_de",
                    models.CharField(
                        blank=True,
                        help_text="Which group of people is the tool targeted at?",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "targetGroup_en",
                    models.CharField(
                        blank=True,
                        help_text="Which group of people is the tool targeted at?",
                        max_length=300,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Usage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usage",
                    models.CharField(
                        blank=True, help_text="usage", max_length=100
                    ),
                ),
                (
                    "usage_de",
                    models.CharField(
                        blank=True, help_text="usage", max_length=100, null=True
                    ),
                ),
                (
                    "usage_en",
                    models.CharField(
                        blank=True, help_text="usage", max_length=100, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserInterface",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "userInterface",
                    models.CharField(
                        blank=True, help_text="userInterface", max_length=300
                    ),
                ),
                (
                    "userInterface_de",
                    models.CharField(
                        blank=True,
                        help_text="userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "userInterface_en",
                    models.CharField(
                        blank=True,
                        help_text="userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tools",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_comment="Name of the item", max_length=200
                    ),
                ),
                (
                    "alternatives",
                    models.CharField(
                        blank=True,
                        help_text="Alternatives - Items with equal or likewise use case.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "developmentState",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "pre-alpha"),
                            (2, "alpha"),
                            (3, "beta"),
                            (4, "release candidate"),
                            (5, "release"),
                        ],
                        db_comment="Level of development - What is the curent development status",
                        null=True,
                    ),
                ),
                (
                    "furtherInformation",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_de",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_en",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        db_comment="File name of image file. Located in media-folder.",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "released",
                    models.BooleanField(
                        blank=True,
                        db_comment="Released - Is the publication done?",
                        null=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "provider_de",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "provider_en",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "resources",
                    models.CharField(
                        blank=True,
                        db_comment="Sources of information - sources for further information about the item e.g. git repo, project website, ...",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=1100,
                        null=True,
                    ),
                ),
                (
                    "description_de",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=1100,
                        null=True,
                    ),
                ),
                (
                    "description_en",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=1100,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease_de",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease_en",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "userInterfaceNotes",
                    models.CharField(
                        blank=True,
                        help_text="additional notes for userInterface",
                        max_length=300,
                    ),
                ),
                (
                    "userInterfaceNotes_de",
                    models.CharField(
                        blank=True,
                        help_text="additional notes for userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "userInterfaceNotes_en",
                    models.CharField(
                        blank=True,
                        help_text="additional notes for userInterface",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "lastUpdate",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                    ),
                ),
                (
                    "lastUpdate_de",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "lastUpdate_en",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "licenseNotes",
                    models.CharField(
                        blank=True, help_text="license notes", max_length=500
                    ),
                ),
                (
                    "licenseNotes_de",
                    models.CharField(
                        blank=True,
                        help_text="license notes",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "licenseNotes_en",
                    models.CharField(
                        blank=True,
                        help_text="license notes",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "releasedPlanned",
                    models.BooleanField(
                        blank=True,
                        help_text="whether publication is planned",
                        null=True,
                    ),
                ),
                (
                    "frameworksLibraries",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "databaseSystem",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "programmingLanguages",
                    models.CharField(
                        blank=True,
                        db_comment="Programming languages - Which programming languages are mainly used to implment the item.",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "accessibility",
                    models.ManyToManyField(
                        db_comment="Accessibility - How accessible is the dataset?",
                        to="tools_over.accessibility",
                    ),
                ),
                (
                    "applicationArea",
                    models.ManyToManyField(
                        db_comment="What do the developers describe as the area of application of their digital tool",
                        to="tools_over.applicationarea",
                    ),
                ),
                (
                    "classification",
                    models.ManyToManyField(
                        db_comment="General type of dataset - Which type or of to which typ belongs the dataset. E.g. framework, programming language, ...",
                        to="tools_over.classification",
                    ),
                ),
                (
                    "focus",
                    models.ManyToManyField(
                        db_comment="Focus identifier - Selected focus (Definied by Wissensplattform)",
                        max_length=200,
                        to="tools_over.focus",
                    ),
                ),
                (
                    "license",
                    models.ManyToManyField(
                        db_comment="under which license was the item published and are there any costs associated with using the dataset?",
                        to="common.license",
                    ),
                ),
                (
                    "lifeCyclePhase",
                    models.ManyToManyField(
                        db_comment="Life cycle phase - In which phase of the product life cycle is the tool used?",
                        to="tools_over.lifecyclephase",
                    ),
                ),
                (
                    "scale",
                    models.ManyToManyField(
                        db_comment="Spatial scale of the use cases - On what scale is the dataset used?",
                        to="tools_over.scale",
                    ),
                ),
                (
                    "specificApplication",
                    models.ManyToManyField(
                        blank=True,
                        db_comment="Specific use cases - Identification of concrete examples of the use of the item in the construction sector/energy transition (equals project number)",
                        to="project_listing.subproject",
                    ),
                ),
                (
                    "targetGroup",
                    models.ManyToManyField(
                        db_comment="Target group - Who do you say the digital item is aimed at?",
                        to="tools_over.targetgroup",
                    ),
                ),
                (
                    "technicalStandardsNorms",
                    models.ManyToManyField(
                        blank=True, null=True, to="TechnicalStandards.norm"
                    ),
                ),
                (
                    "technicalStandardsProtocols",
                    models.ManyToManyField(
                        blank=True, null=True, to="protocols.protocol"
                    ),
                ),
                ("usage", models.ManyToManyField(to="tools_over.usage")),
                (
                    "userInterface",
                    models.ManyToManyField(
                        blank=True, null=True, to="tools_over.userinterface"
                    ),
                ),
            ],
        ),
    ]
