# Generated by Django 5.0.9 on 2024-11-15 12:05

import django.db.models.functions.datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("TechnicalStandards", "0001_initial"),
        ("common", "0005_license_licensingfeerequirement_and_more"),
        (
            "project_listing",
            "0003_alter_enargus_randdplanningcategory_and_more",
        ),
        ("tools_over", "0007_alter_tools_programminglanguages"),
    ]

    operations = [
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifer", models.CharField(max_length=300)),
                ("stringifiedObj", models.TextField()),
                ("loaded", models.BooleanField(default=False)),
                (
                    "updateDate",
                    models.DateTimeField(
                        db_default=django.db.models.functions.datetime.Now()
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="name of the norm", max_length=150
                    ),
                ),
                (
                    "alternatives",
                    models.CharField(
                        blank=True,
                        help_text="Alternatives - Items with equal or likewise use case.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "alternatives_de",
                    models.CharField(
                        blank=True,
                        help_text="Alternatives - Items with equal or likewise use case.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "alternatives_en",
                    models.CharField(
                        blank=True,
                        help_text="Alternatives - Items with equal or likewise use case.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "developmentState",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "pre-alpha"),
                            (2, "alpha"),
                            (3, "beta"),
                            (4, "release candidate"),
                            (5, "release"),
                        ],
                        db_comment="Level of development - What is the curent development status",
                        null=True,
                    ),
                ),
                (
                    "furtherInformation",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_de",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_en",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "released",
                    models.BooleanField(
                        blank=True,
                        db_comment="Released - Is the publication done?",
                        null=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "provider_de",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "provider_en",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "resources",
                    models.CharField(
                        blank=True,
                        db_comment="Sources of information - sources for further information about the item e.g. git repo, project website, ...",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "description_de",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "description_en",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the item",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease_de",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease_en",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "communicationMediumCategory",
                    models.CharField(
                        blank=True,
                        db_comment="Transmission category - How is data transfered between the various components and devices within the system (wired, wireless or wired & wireless)",
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                    ),
                ),
                (
                    "communicationMediumCategory_de",
                    models.CharField(
                        blank=True,
                        db_comment="Transmission category - How is data transfered between the various components and devices within the system (wired, wireless or wired & wireless)",
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "communicationMediumCategory_en",
                    models.CharField(
                        blank=True,
                        db_comment="Transmission category - How is data transfered between the various components and devices within the system (wired, wireless or wired & wireless)",
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "supportedTransmissionMediuems",
                    models.CharField(
                        blank=True,
                        db_comment="Supported transmission media - how are signals transmitted?",
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                    ),
                ),
                (
                    "supportedTransmissionMediuems_de",
                    models.CharField(
                        blank=True,
                        db_comment="Supported transmission media - how are signals transmitted?",
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "supportedTransmissionMediuems_en",
                    models.CharField(
                        blank=True,
                        db_comment="Supported transmission media - how are signals transmitted?",
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "associatedStandards",
                    models.CharField(
                        blank=True,
                        help_text="Zugehörige Standards (Spezifische Standards, denen jedes Protokoll entspricht)",
                        max_length=200,
                    ),
                ),
                (
                    "networkTopology",
                    models.CharField(
                        blank=True,
                        db_comment="Network topology - what is the physical and logical arrangement of devices and components in a network?",
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                    ),
                ),
                (
                    "networkTopology_de",
                    models.CharField(
                        blank=True,
                        db_comment="Network topology - what is the physical and logical arrangement of devices and components in a network?",
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "networkTopology_en",
                    models.CharField(
                        blank=True,
                        db_comment="Network topology - what is the physical and logical arrangement of devices and components in a network?",
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "security",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented security mechanisms - whether and what mechanisms are implemented in the protocol to ensure data security?",
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                    ),
                ),
                (
                    "security_de",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented security mechanisms - whether and what mechanisms are implemented in the protocol to ensure data security?",
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "security_en",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented security mechanisms - whether and what mechanisms are implemented in the protocol to ensure data security?",
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "bandwidth",
                    models.CharField(
                        blank=True,
                        db_comment="Bandwidth - The capacity of the communication channel to transmit data between the various components of the system.",
                        help_text="Bandbreite",
                        max_length=150,
                    ),
                ),
                (
                    "bandwidth_de",
                    models.CharField(
                        blank=True,
                        db_comment="Bandwidth - The capacity of the communication channel to transmit data between the various components of the system.",
                        help_text="Bandbreite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "bandwidth_en",
                    models.CharField(
                        blank=True,
                        db_comment="Bandwidth - The capacity of the communication channel to transmit data between the various components of the system.",
                        help_text="Bandbreite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True, help_text="Frequenz", max_length=100
                    ),
                ),
                (
                    "frequency_de",
                    models.CharField(
                        blank=True,
                        help_text="Frequenz",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "frequency_en",
                    models.CharField(
                        blank=True,
                        help_text="Frequenz",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "range",
                    models.CharField(
                        blank=True,
                        db_comment="Range - the maximum distance over which communication can be mainained between the various devices and components of the system without the signal strength becoming to weak.",
                        help_text="Reichweite",
                        max_length=150,
                    ),
                ),
                (
                    "range_de",
                    models.CharField(
                        blank=True,
                        db_comment="Range - the maximum distance over which communication can be mainained between the various devices and components of the system without the signal strength becoming to weak.",
                        help_text="Reichweite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "range_en",
                    models.CharField(
                        blank=True,
                        db_comment="Range - the maximum distance over which communication can be mainained between the various devices and components of the system without the signal strength becoming to weak.",
                        help_text="Reichweite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "numberOfConnectedDevices",
                    models.CharField(
                        blank=True,
                        db_comment="Maximum devices - maximum number of simultaneous connected devices.",
                        help_text="Geräte (maximale Anzahl an Geräten, die vernetzt werden können)",
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "dataModelArchitecture",
                    models.CharField(
                        blank=True,
                        help_text="Datenmodell Architektur (Datenmodell, in dem die Informationen/Attribute zu einem Objekt hinzugefügt werden)",
                        max_length=150,
                    ),
                ),
                (
                    "discovery",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                    ),
                ),
                (
                    "discovery_de",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "discovery_en",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "multiMaster",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                    ),
                ),
                (
                    "multiMaster_de",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "multiMaster_en",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "packetSize",
                    models.CharField(
                        blank=True,
                        help_text="Paketgröße (Datenpaketgröße, die nach Maximum Transmission Unit übertragen werden können)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "priorities",
                    models.CharField(
                        blank=True,
                        db_comment="Priority - Procedure for how the changes or updates are made.",
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                    ),
                ),
                (
                    "priorities_de",
                    models.CharField(
                        blank=True,
                        db_comment="Priority - Procedure for how the changes or updates are made.",
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "priorities_en",
                    models.CharField(
                        blank=True,
                        db_comment="Priority - Procedure for how the changes or updates are made.",
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.CharField(
                        blank=True,
                        help_text="Kosten, um Hardwareuntersützung für weitere Protokolle zu ermöglichen (Gering, Durchschnittlich, Hoch)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "osiLayers",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented OSI-layer - the application of the layers of the OSI reference model for communication between the various components of the system.",
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                    ),
                ),
                (
                    "osiLayers_de",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented OSI-layer - the application of the layers of the OSI reference model for communication between the various components of the system.",
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "osiLayers_en",
                    models.CharField(
                        blank=True,
                        db_comment="Implemented OSI-layer - the application of the layers of the OSI reference model for communication between the various components of the system.",
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "buildingAutomationLayer",
                    models.CharField(
                        blank=True,
                        db_comment="Levels of building automation - the hierachical structure of building automation system.",
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                    ),
                ),
                (
                    "buildingAutomationLayer_de",
                    models.CharField(
                        blank=True,
                        db_comment="Levels of building automation - the hierachical structure of building automation system.",
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "buildingAutomationLayer_en",
                    models.CharField(
                        blank=True,
                        db_comment="Levels of building automation - the hierachical structure of building automation system.",
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "exampleProject",
                    models.CharField(
                        blank=True,
                        help_text="Typische Anwendung (Beispielhafte Anwendung)",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to=""),
                ),
                (
                    "programmingLanguages",
                    models.CharField(
                        blank=True,
                        db_comment="Programming languages - Which programming languages are mainly used to implment the item.",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "accessibility",
                    models.ManyToManyField(
                        db_comment="Accessibility - How accessible is the dataset?",
                        to="tools_over.accessibility",
                    ),
                ),
                (
                    "associatedTools",
                    models.ManyToManyField(
                        db_comment="Relation to tools", to="tools_over.tools"
                    ),
                ),
                (
                    "classification",
                    models.ManyToManyField(
                        db_comment="General type of protocol - Which type or of to which typ belongs the dataset. E.g. framework, programming language, ...",
                        null=True,
                        to="tools_over.classification",
                    ),
                ),
                (
                    "focus",
                    models.ManyToManyField(
                        db_comment="Focus identifier - Selected focus (Definied by Wissensplattform)",
                        max_length=200,
                        null=True,
                        to="tools_over.focus",
                    ),
                ),
                (
                    "license",
                    models.ManyToManyField(
                        db_comment="under which license was the protocol published and are there any costs associated with using the protocol?",
                        to="common.license",
                    ),
                ),
                (
                    "lifeCyclePhase",
                    models.ManyToManyField(
                        db_comment="Life cycle phase - In which phase of the product life cycle is the tool used?",
                        to="tools_over.lifecyclephase",
                    ),
                ),
                (
                    "scale",
                    models.ManyToManyField(
                        db_comment="Spatial scale of the use cases - On what scale is the dataset used?",
                        to="tools_over.scale",
                    ),
                ),
                (
                    "specificApplication",
                    models.ManyToManyField(
                        blank=True,
                        db_comment="Specific use cases - Identification of concrete examples of the use of the item in the construction sector/energy transition (equals project number)",
                        null=True,
                        to="project_listing.subproject",
                    ),
                ),
                (
                    "targetGroup",
                    models.ManyToManyField(
                        db_comment="Target group - Who do you say the digital item is aimed at?",
                        to="tools_over.targetgroup",
                    ),
                ),
                (
                    "technicalStandardsNorms",
                    models.ManyToManyField(
                        blank=True,
                        db_comment="Norms - Which norms serve as the basis or orientation for the item?",
                        null=True,
                        to="TechnicalStandards.norm",
                    ),
                ),
                (
                    "usage",
                    models.ManyToManyField(
                        db_comment="Use type - What purpose is the item used for? (Simulation, monitoring, optimization, planning, control advanced control)",
                        to="tools_over.usage",
                    ),
                ),
            ],
        ),
    ]
