# Generated by Django 4.2.1 on 2024-08-26 14:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("common", "0003_literature"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConArgument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("conArgument", models.TextField()),
                ("conArgument_de", models.TextField(null=True)),
                ("conArgument_en", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProArgument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proArgument", models.TextField()),
                ("proArgument_de", models.TextField(null=True)),
                ("proArgument_en", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProcedureItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("procedureItem", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="UserEngagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "category_de",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "category_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "categoryShortDescription",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "categoryShortDescription_de",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "categoryShortDescription_en",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "subCategory",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "subCategoryShortDescription",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "subCategoryShortDescription_de",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "subCategoryShortDescription_en",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "subtitle",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timeRequired", models.TextField(blank=True, null=True)),
                ("timeRequired_de", models.TextField(blank=True, null=True)),
                ("timeRequired_en", models.TextField(blank=True, null=True)),
                ("groupSize", models.TextField(blank=True, null=True)),
                ("groupSize_de", models.TextField(blank=True, null=True)),
                ("groupSize_en", models.TextField(blank=True, null=True)),
                ("material", models.TextField(blank=True, null=True)),
                ("material_de", models.TextField(blank=True, null=True)),
                ("material_en", models.TextField(blank=True, null=True)),
                (
                    "conductedBy",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("successFactors", models.TextField(blank=True, null=True)),
                ("goals", models.TextField(blank=True, null=True)),
                ("goals_de", models.TextField(blank=True, null=True)),
                ("goals_en", models.TextField(blank=True, null=True)),
                (
                    "participantObservations",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "persons",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "imageIcon",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "imageIconSelected",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "goodPracticeExample",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "goodPracticeExample_de",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "goodPracticeExample_en",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "conArgument",
                    models.ManyToManyField(
                        blank=True, null=True, to="user_integration.conargument"
                    ),
                ),
                (
                    "literature",
                    models.ManyToManyField(
                        blank=True, null=True, to="common.literature"
                    ),
                ),
                (
                    "proArgument",
                    models.ManyToManyField(
                        blank=True, null=True, to="user_integration.proargument"
                    ),
                ),
                (
                    "procedureItem",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="user_integration.procedureitem",
                    ),
                ),
                (
                    "procedureItem_de",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="user_integration.procedureitem",
                    ),
                ),
                (
                    "procedureItem_en",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="user_integration.procedureitem",
                    ),
                ),
            ],
        ),
    ]
