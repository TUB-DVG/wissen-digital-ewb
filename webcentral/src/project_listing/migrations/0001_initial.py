# Generated by Django 5.0.9 on 2024-12-11 07:35

import django.db.models.deletion
import sqlalchemy.sql._elements_constructors
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("keywords", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "address_id",
                    models.AutoField(
                        help_text="auto generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plz", models.CharField(max_length=5, null=True)),
                ("location", models.CharField(max_length=50, null=True)),
                ("state", models.CharField(max_length=50, null=True)),
                ("address", models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FurtherFundingInformation",
            fields=[
                (
                    "furtherFundingInformation_id",
                    models.AutoField(
                        help_text="Auto.generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fundedBy",
                    models.CharField(
                        blank=True,
                        help_text="Akronym des Bundesministeriums",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "projectManagementAgency",
                    models.CharField(
                        blank=True,
                        help_text="Name des Projektraegers",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "researchProgram",
                    models.CharField(
                        blank=True,
                        help_text="Name des Forschungsprogramms",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "fundingProgram",
                    models.CharField(
                        blank=True,
                        help_text="Name des Forderprogramms",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModuleAssignment",
            fields=[
                (
                    "moduleAssignment_id",
                    models.AutoField(
                        help_text="auto generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "priority1",
                    models.CharField(
                        blank=True,
                        help_text="Project allocation with priority 1 (main contact partner)\n            e.g. M2, M1, ag: ausgelaufen",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "priority2",
                    models.CharField(
                        blank=True,
                        help_text="Project allocation with priority 2 (main contact partner)\n            e.g. M2, M1, ag: ausgelaufen",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "priority3",
                    models.CharField(
                        blank=True,
                        help_text="Project allocation with priority 3 (main contact partner)\n            e.g. M2, M1, ag: ausgelaufen",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "priority4",
                    models.CharField(
                        blank=True,
                        help_text="Project allocation with priority 4 (main contact partner)\n            e.g. M2, M1, ag: ausgelaufen",
                        max_length=2,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "person_id",
                    models.AutoField(
                        help_text="auto generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        help_text="family name", max_length=100, null=True
                    ),
                ),
                (
                    "firstName",
                    models.CharField(
                        help_text="name", max_length=50, null=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="title of the person",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email Address", max_length=254, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RAndDPlanningCategory",
            fields=[
                (
                    "rAndDPlanningCategoryNumber",
                    models.CharField(
                        help_text="identifier number of the performance plan systematic -\n            'Leistungsplansystematiknummer'",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rAndDPlanningCategoryText", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="ExecutingEntity",
            fields=[
                (
                    "executingEntity_id",
                    models.AutoField(
                        help_text="auto generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=sqlalchemy.sql._elements_constructors.true,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.address",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GrantRecipient",
            fields=[
                (
                    "grantRecipient_id",
                    models.AutoField(
                        help_text="auto generiert ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.address",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enargus",
            fields=[
                (
                    "enargus_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("startDate", models.DateField(blank=True, null=True)),
                ("endDate", models.DateField(blank=True, null=True)),
                (
                    "topics",
                    models.CharField(
                        blank=True,
                        help_text="title of the subproject, incl. acronym",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "collaborativeProject",
                    models.CharField(
                        blank=True,
                        help_text="title of the joint project, including acronym",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "database",
                    models.CharField(
                        blank=True,
                        default=sqlalchemy.sql._elements_constructors.null,
                        help_text="database information from EnArgus internal usage",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "shortDescriptionDe",
                    models.TextField(
                        blank=True,
                        default=sqlalchemy.sql._elements_constructors.null,
                        help_text="short description in German",
                        null=True,
                    ),
                ),
                (
                    "shortDescriptionEn",
                    models.TextField(
                        blank=True,
                        default=sqlalchemy.sql._elements_constructors.null,
                        help_text="short description in English",
                        null=True,
                    ),
                ),
                (
                    "appropriatedBudget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="amount of funding in Euros",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "executingEntity",
                    models.ForeignKey(
                        blank=True,
                        help_text="name of the organization which executes the project",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.executingentity",
                    ),
                ),
                (
                    "furtherFundingInformation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.furtherfundinginformation",
                    ),
                ),
                (
                    "grantRecipient",
                    models.ForeignKey(
                        blank=True,
                        help_text="recipient organization, to which the funding is granted",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.grantrecipient",
                    ),
                ),
                (
                    "projectLead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.person",
                    ),
                ),
                (
                    "rAndDPlanningCategory",
                    models.ForeignKey(
                        blank=True,
                        help_text="number of the systematic performance plan ('leistungsplan\n            systematik')",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.randdplanningcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subproject",
            fields=[
                (
                    "referenceNumber_id",
                    models.CharField(
                        help_text="Funding code (numerical sequence of 9 to 10 characters),\n            fkz - Förderkennzeichen",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "enargusData",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project_listing.enargus",
                    ),
                ),
                (
                    "keywordsFirstReview",
                    models.ForeignKey(
                        blank=True,
                        null=sqlalchemy.sql._elements_constructors.true,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="keywords.keywordregisterfirstreview",
                    ),
                ),
                (
                    "moduleAssignment",
                    models.ForeignKey(
                        blank=True,
                        null=sqlalchemy.sql._elements_constructors.true,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="project_listing.moduleassignment",
                    ),
                ),
            ],
        ),
    ]
