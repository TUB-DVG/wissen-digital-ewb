# Generated by Django 5.0.9 on 2024-11-12 10:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("common", "0004_license"),
        (
            "project_listing",
            "0003_alter_enargus_randdplanningcategory_and_more",
        ),
        ("tools_over", "0006_merge_20241112_0916"),
    ]

    operations = [
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_comment="Name of the dataset", max_length=200
                    ),
                ),
                (
                    "name_de",
                    models.CharField(
                        db_comment="Name of the dataset",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        db_comment="Name of the dataset",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "classification",
                    models.CharField(
                        db_comment="General type of dataset - Which category does the data set belong to?",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "developmentState",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "pre-alpha"),
                            (2, "alpha"),
                            (3, "beta"),
                            (4, "release candidate"),
                            (5, "release"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "provider_de",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "provider_en",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "resources",
                    models.CharField(
                        blank=True,
                        db_comment="Sources of information - sources for further information about the dataset e.g. git repo, project website, ...",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "availability",
                    models.CharField(
                        db_comment="How accessible is the dataset?",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "availability_de",
                    models.CharField(
                        db_comment="How accessible is the dataset?",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "availability_en",
                    models.CharField(
                        db_comment="How accessible is the dataset?",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "coverage",
                    models.CharField(
                        blank=True,
                        db_comment="Geographical coverage - regions covered by the dataset",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "coverage_de",
                    models.CharField(
                        blank=True,
                        db_comment="Geographical coverage - regions covered by the dataset",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "coverage_en",
                    models.CharField(
                        blank=True,
                        db_comment="Geographical coverage - regions covered by the dataset",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "resolution",
                    models.CharField(
                        blank=True,
                        db_comment="Spatial resolution - spatial detail level of the data",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "resolution_de",
                    models.CharField(
                        blank=True,
                        db_comment="Spatial resolution - spatial detail level of the data",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "resolution_en",
                    models.CharField(
                        blank=True,
                        db_comment="Spatial resolution - spatial detail level of the data",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the dataset",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "description_de",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the dataset",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "description_en",
                    models.CharField(
                        blank=True,
                        db_comment="Description of the dataset",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation",
                    models.CharField(
                        blank=True,
                        db_comment="information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_de",
                    models.CharField(
                        blank=True,
                        db_comment="information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "furtherInformation_en",
                    models.CharField(
                        blank=True,
                        db_comment="information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "licenseNotes",
                    models.CharField(
                        blank=True, db_comment="", max_length=500, null=True
                    ),
                ),
                (
                    "licenseNotes_de",
                    models.CharField(
                        blank=True, db_comment="", max_length=500, null=True
                    ),
                ),
                (
                    "licenseNotes_en",
                    models.CharField(
                        blank=True, db_comment="", max_length=500, null=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to=""),
                ),
                (
                    "lastUpdate",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                    ),
                ),
                (
                    "lastUpdate_de",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "lastUpdate_en",
                    models.CharField(
                        blank=True,
                        help_text="time (year/month/date) of the last update",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "released",
                    models.BooleanField(
                        blank=True,
                        help_text="whether the tool is released or not",
                        null=True,
                    ),
                ),
                (
                    "releasedPlanned",
                    models.BooleanField(
                        blank=True,
                        help_text="whether publication is planned",
                        null=True,
                    ),
                ),
                (
                    "yearOfRelease",
                    models.CharField(
                        blank=True,
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                    ),
                ),
                (
                    "accessibility",
                    models.ManyToManyField(
                        db_comment="How accessable is the dataset?",
                        to="tools_over.accessibility",
                    ),
                ),
                (
                    "alternatives",
                    models.ManyToManyField(
                        blank=True,
                        db_comment="Identification of concrete examples of the use of datasets in the construction sector/energy transition construction (e.g. funding indicators)",
                        null=True,
                        to="project_listing.subproject",
                    ),
                ),
                (
                    "applicationArea",
                    models.ManyToManyField(
                        db_comment="Typical application area in which the dataset is used. An application area describes all possible methods and datasets, that can be used to achieve a specific purpose.",
                        max_length=200,
                        null=True,
                        to="tools_over.applicationarea",
                    ),
                ),
                (
                    "focus",
                    models.ManyToManyField(
                        db_comment="Typical application area in which the dataset is used. An application area describes all possible methods and datasets, that can be used to achieve a specific purpose.",
                        max_length=200,
                        null=True,
                        to="tools_over.focus",
                    ),
                ),
                (
                    "license",
                    models.ManyToManyField(
                        db_comment="under which license was the dataset published and are there any costs associated with using the dataset?",
                        to="common.license",
                    ),
                ),
                (
                    "lifeCyclePhase",
                    models.ManyToManyField(
                        db_comment="In which phase of the product life cycle is the tool used?",
                        to="tools_over.lifecyclephase",
                    ),
                ),
                (
                    "scale",
                    models.ManyToManyField(
                        db_comment="Spatial scale of the use cases - On what scale is the dataset used?",
                        to="tools_over.scale",
                    ),
                ),
                (
                    "targetGroup",
                    models.ManyToManyField(
                        db_comment="Which user group the dataset is aimed for.",
                        to="tools_over.targetgroup",
                    ),
                ),
            ],
        ),
    ]
