# Generated by Django 5.0.9 on 2024-11-18 13:17

from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("TechnicalStandards", "0001_initial"),
        ("TechnicalStandards", "0002_delete_protocol"),
        (
            "TechnicalStandards",
            "0003_norm_accessibility_norm_alternatives_and_more",
        ),
        ("TechnicalStandards", "0004_remove_norm_link_norm_resources"),
        ("TechnicalStandards", "0005_remove_norm_shortdescription_and_more"),
        (
            "TechnicalStandards",
            "0006_norm_specificapplication_norm_usage_and_more",
        ),
        ("TechnicalStandards", "0007_remove_norm_isnorm"),
        (
            "TechnicalStandards",
            "0008_alter_norm_alternatives_alter_norm_name_and_more",
        ),
    ]

    dependencies = [
        ("common", "0006_license_licensingfeerequirement_de_and_more"),
        (
            "project_listing",
            "0003_alter_enargus_randdplanningcategory_and_more",
        ),
        ("tools_over", "0008_alter_tools_technicalstandardsprotocols"),
    ]

    operations = [
        migrations.CreateModel(
            name="Norm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the item",
                        help_text="name of the norm",
                        max_length=150,
                    ),
                ),
                (
                    "name_de",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the item",
                        help_text="name of the norm",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the item",
                        help_text="name of the norm",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        db_comment="full title  of the norm",
                        help_text="title of the norm",
                        max_length=250,
                    ),
                ),
                (
                    "title_de",
                    models.CharField(
                        blank=True,
                        db_comment="full title  of the norm",
                        help_text="title of the norm",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "title_en",
                    models.CharField(
                        blank=True,
                        db_comment="full title  of the norm",
                        help_text="title of the norm",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, help_text="source", max_length=100
                    ),
                ),
                (
                    "source_de",
                    models.CharField(
                        blank=True,
                        help_text="source",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "source_en",
                    models.CharField(
                        blank=True,
                        help_text="source",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "accessibility",
                    models.ManyToManyField(
                        db_comment="Accessibility - How accessible is the dataset?",
                        to="tools_over.accessibility",
                    ),
                ),
                (
                    "alternatives",
                    models.CharField(
                        blank=True,
                        db_comment="Alternatives - items with equal or likewise use case.",
                        help_text="Alternatives - Items with equal or likewise use case.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "applicationArea",
                    models.ManyToManyField(
                        db_comment="Typical application area in which the item is used.",
                        to="tools_over.applicationarea",
                    ),
                ),
                (
                    "classification",
                    models.ManyToManyField(
                        db_comment="General type of item - Which type or of to which typ belongs the item. E.g. framework, programming language, ...",
                        to="tools_over.classification",
                    ),
                ),
                (
                    "developmentState",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "pre-alpha"),
                            (2, "alpha"),
                            (3, "beta"),
                            (4, "release candidate"),
                            (5, "release"),
                        ],
                        db_comment="Level of development - What is the curent development status",
                        null=True,
                    ),
                ),
                (
                    "focus",
                    models.ManyToManyField(
                        db_comment="Focus identifier - Selected focus (Definied by Wissensplattform)",
                        max_length=200,
                        to="tools_over.focus",
                    ),
                ),
                (
                    "furtherInformation",
                    models.CharField(
                        blank=True,
                        db_comment="Further information - Information of miscellaneous subjects",
                        max_length=1200,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        db_comment="File name of image file. Located in media-folder.",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "license",
                    models.ManyToManyField(
                        db_comment="under which license was the dataset published and are there any costs associated with using the dataset?",
                        to="common.license",
                    ),
                ),
                (
                    "lifeCyclePhase",
                    models.ManyToManyField(
                        db_comment="Life cycle phase - In which phase of the product life cycle is the tool used?",
                        to="tools_over.lifecyclephase",
                    ),
                ),
                (
                    "programmingLanguages",
                    models.CharField(
                        blank=True,
                        db_comment="Programming languages - Which programming languages are mainly used to implment the item.",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        db_comment="Developers/maintainers/provider - Person or organisation responsible for the development of the item.",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "released",
                    models.BooleanField(
                        blank=True,
                        db_comment="Released - Is the publication done?",
                        null=True,
                    ),
                ),
                (
                    "scale",
                    models.ManyToManyField(
                        db_comment="Spatial scale of the use cases - On what scale is the dataset used?",
                        to="tools_over.scale",
                    ),
                ),
                (
                    "targetGroup",
                    models.ManyToManyField(
                        db_comment="Target group - Who do you say the digital item is aimed at?",
                        to="tools_over.targetgroup",
                    ),
                ),
                (
                    "resources",
                    models.CharField(
                        blank=True,
                        db_comment="Sources of information - sources for further information about the item e.g. git repo, project website, ...",
                        help_text="link",
                        max_length=1000,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        db_comment="Description of the item.",
                        default=None,
                        help_text="short description",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "specificApplication",
                    models.ManyToManyField(
                        blank=True,
                        db_comment="Specific use cases - Identification of concrete examples of the use of the item in the construction sector/energy transition (equals project number)",
                        to="project_listing.subproject",
                    ),
                ),
                (
                    "usage",
                    models.ManyToManyField(
                        db_comment="Use type - What purpose is the item used for? (Simulation, monitoring, optimization, planning, control advanced control)",
                        to="tools_over.usage",
                    ),
                ),
                (
                    "yearOfRelease",
                    models.CharField(
                        blank=True,
                        db_comment="Year of publication - If the item is published, in which year was it released?",
                        help_text="year of software release (planned or conducted)",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
