# Generated by Django 4.2.1 on 2024-07-11 11:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Norm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("isNorm", models.BooleanField(default=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="name of the norm", max_length=150
                    ),
                ),
                (
                    "name_de",
                    models.CharField(
                        blank=True,
                        help_text="name of the norm",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="name of the norm",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "link",
                    models.CharField(
                        blank=True, help_text="link", max_length=150
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="title of the norm",
                        max_length=250,
                    ),
                ),
                (
                    "title_de",
                    models.CharField(
                        blank=True,
                        help_text="title of the norm",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "title_en",
                    models.CharField(
                        blank=True,
                        help_text="title of the norm",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "shortDescription",
                    models.TextField(
                        help_text="short description", max_length=600
                    ),
                ),
                (
                    "shortDescription_de",
                    models.TextField(
                        help_text="short description", max_length=600, null=True
                    ),
                ),
                (
                    "shortDescription_en",
                    models.TextField(
                        help_text="short description", max_length=600, null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, help_text="source", max_length=100
                    ),
                ),
                (
                    "source_de",
                    models.CharField(
                        blank=True,
                        help_text="source",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "source_en",
                    models.CharField(
                        blank=True,
                        help_text="source",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("isNorm", models.BooleanField(default=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="name of the norm", max_length=150
                    ),
                ),
                (
                    "link",
                    models.CharField(
                        blank=True, help_text="link", max_length=150
                    ),
                ),
                (
                    "communicationMediumCategory",
                    models.CharField(
                        blank=True,
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                    ),
                ),
                (
                    "communicationMediumCategory_de",
                    models.CharField(
                        blank=True,
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "communicationMediumCategory_en",
                    models.CharField(
                        blank=True,
                        help_text="Übertragungsmethoden (verkabelt, drahtlos oder verkabelt und drahtlos)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "supportedTransmissionMediuems",
                    models.CharField(
                        blank=True,
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                    ),
                ),
                (
                    "supportedTransmissionMediuems_de",
                    models.CharField(
                        blank=True,
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "supportedTransmissionMediuems_en",
                    models.CharField(
                        blank=True,
                        help_text="Unterstützte Übertragungsmedien",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "associatedStandards",
                    models.CharField(
                        blank=True,
                        help_text="Zugehörige Standards (Spezifische Standards, denen jedes Protokoll entspricht)",
                        max_length=200,
                    ),
                ),
                (
                    "openSourceStatus",
                    models.CharField(
                        blank=True,
                        help_text="Open-Source-Status (Ob Spezifikationen öffentlich und frei verfügbar sind oder nicht)",
                        max_length=50,
                    ),
                ),
                (
                    "openSourceStatus_de",
                    models.CharField(
                        blank=True,
                        help_text="Open-Source-Status (Ob Spezifikationen öffentlich und frei verfügbar sind oder nicht)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "openSourceStatus_en",
                    models.CharField(
                        blank=True,
                        help_text="Open-Source-Status (Ob Spezifikationen öffentlich und frei verfügbar sind oder nicht)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "licensingFeeRequirement",
                    models.CharField(
                        blank=True,
                        help_text="Lizenzgebühr (Gebühr zur Abdeckung der Kosten für Tests und Zertifizierung)",
                        max_length=150,
                    ),
                ),
                (
                    "licensingFeeRequirement_de",
                    models.CharField(
                        blank=True,
                        help_text="Lizenzgebühr (Gebühr zur Abdeckung der Kosten für Tests und Zertifizierung)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "licensingFeeRequirement_en",
                    models.CharField(
                        blank=True,
                        help_text="Lizenzgebühr (Gebühr zur Abdeckung der Kosten für Tests und Zertifizierung)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "networkTopology",
                    models.CharField(
                        blank=True,
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                    ),
                ),
                (
                    "networkTopology_de",
                    models.CharField(
                        blank=True,
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "networkTopology_en",
                    models.CharField(
                        blank=True,
                        help_text="Netzwerktopologie (Physische und logische Anordnung von Geräten in einem Netzwerk)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "security",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                    ),
                ),
                (
                    "security_de",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "security_en",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte Sicherheitmechanismen",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "bandwidth",
                    models.CharField(
                        blank=True, help_text="Bandbreite", max_length=150
                    ),
                ),
                (
                    "bandwidth_de",
                    models.CharField(
                        blank=True,
                        help_text="Bandbreite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "bandwidth_en",
                    models.CharField(
                        blank=True,
                        help_text="Bandbreite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True, help_text="Frequenz", max_length=100
                    ),
                ),
                (
                    "frequency_de",
                    models.CharField(
                        blank=True,
                        help_text="Frequenz",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "frequency_en",
                    models.CharField(
                        blank=True,
                        help_text="Frequenz",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "range",
                    models.CharField(
                        blank=True, help_text="Reichweite", max_length=150
                    ),
                ),
                (
                    "range_de",
                    models.CharField(
                        blank=True,
                        help_text="Reichweite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "range_en",
                    models.CharField(
                        blank=True,
                        help_text="Reichweite",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "numberOfConnectedDevices",
                    models.CharField(
                        blank=True,
                        help_text="Geräte (maximale Anzahl an Geräten, die vernetzt werden können)",
                        max_length=5,
                    ),
                ),
                (
                    "dataModelArchitecture",
                    models.CharField(
                        blank=True,
                        help_text="Datenmodell Architektur (Datenmodell, in dem die Informationen/Attribute zu einem Objekt hinzugefügt werden)",
                        max_length=150,
                    ),
                ),
                (
                    "discovery",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                    ),
                ),
                (
                    "discovery_de",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "discovery_en",
                    models.CharField(
                        blank=True,
                        help_text="Discovery (Funktion, um Geräte im Netzwerk automatisch zu identifzieren)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "multiMaster",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                    ),
                ),
                (
                    "multiMaster_de",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "multiMaster_en",
                    models.CharField(
                        blank=True,
                        help_text="Multi Master (Können mehrere Mastergeräte zeitgleich agieren)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "packetSize",
                    models.CharField(
                        blank=True,
                        help_text="Paketgröße (Datenpaketgröße, die nach Maximum Transmission Unit übertragen werden können)",
                        max_length=10,
                    ),
                ),
                (
                    "priorities",
                    models.CharField(
                        blank=True,
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                    ),
                ),
                (
                    "priorities_de",
                    models.CharField(
                        blank=True,
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "priorities_en",
                    models.CharField(
                        blank=True,
                        help_text="Priorität  (Vorgehen, wie die Änderungen / Aktualisierungen vorgenommen werden)",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.CharField(
                        blank=True,
                        help_text="Kosten, um Hardwareuntersützung für weitere Protokolle zu ermöglichen (Gering, Durchschnittlich, Hoch)",
                        max_length=150,
                    ),
                ),
                (
                    "osiLayers",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                    ),
                ),
                (
                    "osiLayers_de",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "osiLayers_en",
                    models.CharField(
                        blank=True,
                        help_text="Implementierte OSI-Schichten (Anwendung [Application], Darstellung [Presentation], Sitzung [Session], Transport [Transport], Vermittlung/Paket [Network], Sicherung [Data Link], Bitübertragung [Phyiscal])",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "buildingAutomationLayer",
                    models.CharField(
                        blank=True,
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                    ),
                ),
                (
                    "buildingAutomationLayer_de",
                    models.CharField(
                        blank=True,
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "buildingAutomationLayer_en",
                    models.CharField(
                        blank=True,
                        help_text="Ebenen der Gebäudeautomation (Feldebene, Automationsebene, Managementebene)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "exampleProject",
                    models.CharField(
                        blank=True,
                        help_text="Typische Anwendung (Beispielhafte Anwendung)",
                        max_length=250,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to=""),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
